---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../config";
import MagicButtons from "../components/MagicButtons.astro";
import Search from "../components/Search.vue";

export interface Props {
  content: {
    title?: string;
    description?: string;
    image?: string;
    isBlogPost?: boolean;
    isFeed?: boolean;
  };
}

const {
  content: { title, description, image, isBlogPost, isFeed },
} = Astro.props;

let microformat = "";
let schema = "https://schema.org/WebPage";

if (isFeed) {
  microformat = "h-feed";
  schema = "https://schema.org/Blog";
} else if (isBlogPost) {
  microformat = "h-entry";
  schema = "https://schema.org/BlogPosting";
}
---

<!DOCTYPE html>
<html lang="en-us">
  <head>
    <BaseHead
      title={title || SITE_TITLE}
      description={description || SITE_DESCRIPTION}
      image={image}
    />
    <slot name="head" />
  </head>
  <body class={microformat} itemscope itemtype={schema} >
    <Header title={title || SITE_TITLE}>
      <slot name="nav" slot="nav" />
    </Header>
    <main>
      <slot />
    </main>
    <div id="hideSearch" style="display: none">
      <Search client:visible />
    </div>
    <MagicButtons />
    <script>
      const searchDiv = document.getElementById("hideSearch") as HTMLDivElement;
      const searchLink = document.getElementById("searchLink") as HTMLAnchorElement;

      searchDiv.addEventListener("click", () => {
        searchDiv.style.display = "none";
      })

      searchDiv.firstElementChild!.addEventListener("click", (e) => {
        e.stopPropagation();
      });

      searchDiv.addEventListener("keydown", (e) => {
        if (e.key === "Escape") {
          searchDiv.style.display = "none";
          e.stopPropagation();
        }
      });

      searchLink.addEventListener("click", (e) => {
        searchDiv.style.display = "block";
        const searchInput = document.getElementById("searchInput") as HTMLInputElement;
        setTimeout(() => { searchInput.focus(); }, 20);
        e.preventDefault();
      });

      searchLink.style.display = "inline";
    </script>
  </body>
</html>
