---
import { Icon } from "astro-icon";
import HeaderLink from "../components/HeaderLink.astro";
import Skeleton from "../layouts/Skeleton.astro";

// Use Astro.glob() to fetch all posts, and then sort them by date.
const posts = (await Astro.glob("./blog/*.{md,mdx}")).sort(
	(a, b) =>
		new Date(b.frontmatter.pubDate).valueOf() -
		new Date(a.frontmatter.pubDate).valueOf()
);

const content = {
	title: "Jordan Webb's blog",
	description: "Development notes and technical musings",
};
---

<Skeleton content={content}>
	<style slot="head">
		.posts {
			list-style-type: none;
			padding: unset;
		}
		.posts li {
			display: flex;
		}
		.posts li time {
			flex: 0 0 130px;
			font-style: italic;
			color: #888;
		}
	</style>
	<style lang="css">
		[astro-icon] {
			height: 1rem;
			width: 1rem;
		}
	</style>
	<span class="feedlinks" slot="nav">
		<br />
		<HeaderLink href="/rss.xml">RSS</HeaderLink>
		<HeaderLink href="/atom.xml">Atom</HeaderLink>
		<HeaderLink href="/feed.json">JSON Feed</HeaderLink>
	</span>
	<section class="h-feed" itemscope itemtype="https://schema.org/Blog">
		<ul class="posts">
			{
				posts.map((post) => (
					<li
						class="h-entry"
						itemprop="blogPost"
						itemscope
						itemtype="https://schema.org/BlogPosting"
					>
						<time
							class="dt-published"
							itemprop="datePublished"
							datetime={post.frontmatter.pubDate}
						>
							{new Date(post.frontmatter.pubDate).toLocaleDateString("en-us", {
								year: "numeric",
								month: "short",
								day: "numeric",
							})}
						</time>
						<a
							class="p-name u-url"
							itemprop="name headline"
							href={post.url + "/"}
						>
							{post.frontmatter.title}
						</a>
					</li>
				))
			}
		</ul>
		<meta
			class="p-name"
			itemprop="name headline"
			content="Jordan Webb's blog"
		/>
		<meta class="u-url" itemprop="url" content="https://jordemort.dev/blog/" />
	</section>
</Skeleton>
